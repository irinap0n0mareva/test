1. Напишите класс бинарного дерева поиска, котрый поддерждивает: вставка элементов по значению(Insert), поиск элементов по значению(Search)
ТЗ:
    для класса TreeNode определить:
- конструктор по умолчанию, инициализирующий значения элементов равных нулю, указатели дочерних узлов, равных nullptr;
- конструктор, принимающий значение;
- геттеры и сеттеры значения и дочерних узлов;
- все поля класса должны быть private;
    для класса BinaryTree определить:
- конструктор по умолчанию, инициализирующий значения элементов равных нулю, указатели дочерних узлов, равных nullptr;
- конструктор, принимающий значение;
- деструктор, удаляющий все узды дерева;
- метод вставки Insert() (по значению);
- метод поиска Search(), возвращающий указатель на узел (поиск по значению);
- все поля класса должны быть private;
- перегрузить (в private секции) методы поиска и вставки, данные методы должны принимать в качестве аргумента значение и указатель на узел (использовать данне перегрузки внутри метов Insert и Search, определенных в public секции).

2. Напишите алгоритм создания бинарного дерева поиска с минимальной высотой для отсортированного (по возрастанию) массива с уникльными целочисленными элементами.
ТЗ:
- использовать класс BinaryTree из предыдущего задания;
- метод CreateMinimalBST() принимет указатель на начало массива, индекс начальног элемента, индекс конечного элемента.
